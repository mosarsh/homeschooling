FROM golang:alpine AS builder

# Set necessary environmet variables needed for our image
ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# Move to working directory /build
WORKDIR /build

# Copy and download dependency using go mod
COPY ./api/go.mod .
COPY ./api/go.sum .
RUN go mod download

# Copy the code into the container
COPY ./api/ /build/
COPY ./api/assets/ /build/assets

# Build the application
RUN go build -o main

# Build a small image
FROM scratch

WORKDIR /usr/src/api

COPY --from=builder /build/main /
COPY --from=builder /build/conf.local.yaml /
COPY --from=builder /build/assets /usr/src/api/assets

EXPOSE 8080

# Command to run
ENTRYPOINT ["/main"]